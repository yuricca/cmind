package com.example.demo.mybatis.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.example.demo.model.Staff;
import com.example.demo.model.StaffExample;

@Mapper
public interface StaffMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    long countByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    int deleteByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    @Delete({
        "delete from staff",
        "where employee_id = #{employeeId,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(String employeeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    @Insert({
        "insert into staff (employee_id, name, ",
        "password, created_at, ",
        "created_user, update_at, ",
        "update_user)",
        "values (#{employeeId,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{createdUser,jdbcType=CHAR}, #{updateAt,jdbcType=TIMESTAMP}, ",
        "#{updateUser,jdbcType=CHAR})"
    })
    int insert(Staff row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    int insertSelective(Staff row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    List<Staff> selectByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    @Select({
        "select",
        "employee_id, name, password, created_at, created_user, update_at, update_user",
        "from staff",
        "where employee_id = #{employeeId,jdbcType=CHAR}"
    })
    @ResultMap("com.example.demo.mybatis.mapper.StaffMapper.BaseResultMap")
    Staff selectByPrimaryKey(String employeeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    int updateByExampleSelective(@Param("row") Staff row, @Param("example") StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    int updateByExample(@Param("row") Staff row, @Param("example") StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    int updateByPrimaryKeySelective(Staff row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Mon Oct 31 23:29:38 JST 2022
     */
    @Update({
        "update staff",
        "set name = #{name,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "created_user = #{createdUser,jdbcType=CHAR},",
          "update_at = #{updateAt,jdbcType=TIMESTAMP},",
          "update_user = #{updateUser,jdbcType=CHAR}",
        "where employee_id = #{employeeId,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(Staff row);
}